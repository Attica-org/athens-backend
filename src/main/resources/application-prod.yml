server:
  servlet:
    encoding:
      charset: utf-8
      force: true
  port: 8080

spring:
  servlet:
    multipart:
      enabled: true
      location: ./charming/tmp
      max-request-size: 100MB
      max-file-size: 5MB
  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DB}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Seoul
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
      default_batch_fetch_size: 100
    open-in-view: false


  # OAuth
  security:
    oauth2.client:
      registration:
        google:
          clientId: ${GOOGLE_CLIENT_ID}
          clientSecret: ${GOOGLE_CLIENT_SECRET}
          redirectUri: ${GOOGLE_REDIRECT_URI}
          scope:
            - email
        kakao:
          clientId: ${KAKAO_CLIENT_ID}
          clientSecret: ${KAKAO_CLIENT_SECRET}
          clientAuthenticationMethod: client_secret_post
          authorizationGrantType: authorization_code
          redirectUri: ${KAKAO_REDIRECT_URI}
          scope:
            - account_email
          clientName: Kakao
      # Provider 설정
      provider:
        kakao:
          authorizationUri: https://kauth.kakao.com/oauth/authorize
          tokenUri: https://kauth.kakao.com/oauth/token
          userInfoUri: https://kapi.kakao.com/v2/user/me
          userNameAttribute: id
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}

app:
  auth:
    jwt:
      secret-key: ${JWT_SECRET_KEY}
      access-expired: ${ACCESS_EXPIRED:1200000} # 기본 20분
      refresh-expired: ${REFRESH_EXPIRED:86400000} # 기본 24시간
    temp-token:
      expiration-minutes: ${TEMP_TOKEN_EXPIRATION_MINUTES:5} # 기본 5분

  oauth2:
    redirect-uris: ${OAUTH2_REDIRECT_URIS}
    default-redirect-uri: ${OAUTH2_DEFAULT_REDIRECT_URI}


logging:
  level:
    '[com.attica.athens]': DEBUG
    '[org.hibernate.type]': TRACE
    org.springframework.data.redis: DEBUG

  config: classpath:logback-prod.xml


frontend:
  local: http://localhost:3000, file:// # 로컬 URL 예시

cors:
  allowed-origins: http://localhost:3000, file://, https://athens-client-mu.vercel.app

aws:
  s3:
    access-key: ${S3_ACCESS_KEY}
    secret-key: ${S3_SECRET_KEY}
    bucket: ${S3_BUCKET_NAME}
    region:
      static: ${S3_REGION}
      auto: false
    stack:
      auto: false
